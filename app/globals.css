@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
:root {
--background: 0 0% 100%;
--foreground: 0 0% 3.9%;
--card: 0 0% 100%;
--card-foreground: 0 0% 3.9%;
--popover: 0 0% 100%;
--popover-foreground: 0 0% 3.9%;
--primary: 0 0% 9%;
--primary-foreground: 0 0% 98%;
--secondary: 0 0% 96.1%;
--secondary-foreground: 0 0% 9%;
--muted: 0 0% 96.1%;
--muted-foreground: 0 0% 45.1%;
--accent: 0 0% 96.1%;
--accent-foreground: 0 0% 9%;
--destructive: 0 84.2% 60.2%;
--destructive-foreground: 0 0% 98%;
--border: 0 0% 89.8%;
--input: 0 0% 89.8%;
--ring: 0 0% 3.9%;
--chart-1: 12 76% 61%;
--chart-2: 173 58% 39%;
--chart-3: 197 37% 24%;
--chart-4: 43 74% 66%;
--chart-5: 27 87% 67%;
--radius: 0.8rem;
}

.dark {
--background: 0 0% 3.9%;
--foreground: 0 0% 98%;
--card: 0 0% 3.9%;
--card-foreground: 0 0% 98%;
--popover: 0 0% 3.9%;
--popover-foreground: 0 0% 98%;
--primary: 0 0% 98%;
--primary-foreground: 0 0% 9%;
--secondary: 0 0% 14.9%;
--secondary-foreground: 0 0% 98%;
--muted: 0 0% 14.9%;
--muted-foreground: 0 0% 63.9%;
--accent: 0 0% 14.9%;
--accent-foreground: 0 0% 98%;
--destructive: 0 62.8% 30.6%;
--destructive-foreground: 0 0% 98%;
--border: 0 0% 14.9%;
--input: 0 0% 14.9%;
--ring: 0 0% 83.1%;
--chart-1: 220 70% 50%;
--chart-2: 160 60% 45%;
--chart-3: 30 80% 55%;
--chart-4: 280 65% 60%;
--chart-5: 340 75% 55%;
}

/* ИСПРАВЛЕНО: Заменяем @apply border-border; на стандартный сброс,
чтобы избежать ошибки синтаксиса Tailwind при сборке. */

{
/* Добавляем стандартное свойство box-sizing, которое обычно требуется */
border-color: hsl(var(--border));
}
*,
*::before,
*::after {
box-sizing: border-box;
}

body {
@apply bg-background text-foreground antialiased;
background: linear-gradient(135deg, #f5f7fa 0%, #e8f0fe 25%, #f0f4ff 50%, #fef5f8 75%, #f5f7fa 100%);
background-size: 400% 400%;
animation: gradientShift 15s ease infinite;
position: relative;
}

body::before {
content: '';
position: fixed;
top: 0;
left: 0;
right: 0;
bottom: 0;
background:
radial-gradient(circle at 20% 50%, rgba(14, 165, 233, 0.08) 0%, transparent 50%),
radial-gradient(circle at 80% 50%, rgba(147, 51, 234, 0.06) 0%, transparent 50%),
radial-gradient(circle at 50% 80%, rgba(236, 72, 153, 0.05) 0%, transparent 50%);
pointer-events: none;
z-index: -1;
}
}

@keyframes gradientShift {
0%, 100% {
background-position: 0% 50%;
}
50% {
background-position: 100% 50%;
}
}

@keyframes fadeInUp {
from {
opacity: 0;
transform: translateY(30px);
}
to {
opacity: 1;
transform: translateY(0);
}
}

@keyframes scaleIn {
from {
opacity: 0;
transform: scale(0.95);
}
to {
opacity: 1;
transform: scale(1);
}
}

@keyframes slideInRight {
from {
opacity: 0;
transform: translateX(30px);
}
to {
opacity: 1;
transform: translateX(0);
}
}

@keyframes float {
0%, 100% {
transform: translateY(0px);
}
50% {
transform: translateY(-10px);
}
}

@keyframes pulse {
0%, 100% {
opacity: 1;
}
50% {
opacity: 0.8;
}
}

@keyframes shimmer {
0% {
background-position: -200% center;
}
100% {
background-position: 200% center;
}
}

.container {
@apply mx-auto max-w-6xl px-4;
}

.animate-fade-in-up {
animation: fadeInUp 0.6s ease-out forwards;
}

.animate-scale-in {
animation: scaleIn 0.5s ease-out forwards;
}

.animate-slide-in-right {
animation: slideInRight 0.6s ease-out forwards;
}

.animate-float {
animation: float 3s ease-in-out infinite;
}

.animate-pulse-soft {
animation: pulse 2s ease-in-out infinite;
}

.glass-effect {
background: rgba(255, 255, 255, 0.7);
backdrop-filter: blur(10px);
border: 1px solid rgba(255, 255, 255, 0.2);
}

.shimmer-effect {
background: linear-gradient(
90deg,
transparent,
rgba(255, 255, 255, 0.4),
transparent
);
background-size: 200% 100%;
animation: shimmer 2s infinite;
}

/* Gradient Border Effect */
@keyframes rotateBorder {
0% {
transform: rotate(0deg);
}
100% {
transform: rotate(360deg);
}
}

.gradient-border {
position: relative;
background: linear-gradient(135deg, rgba(255,255,255,0.9), rgba(255,255,255,0.7));
backdrop-filter: blur(10px);
}

.gradient-border::before {
content: '';
position: absolute;
inset: -2px;
background: linear-gradient(45deg, #667eea, #764ba2, #f093fb, #4facfe, #667eea);
background-size: 300% 300%;
border-radius: inherit;
z-index: -1;
animation: gradientShift 4s ease infinite;
}

/* Glow Effect */
@keyframes glow {
0%, 100% {
box-shadow: 0 0 20px rgba(102, 126, 234, 0.4), 0 0 40px rgba(102, 126, 234, 0.2);
}
50% {
box-shadow: 0 0 30px rgba(240, 147, 251, 0.5), 0 0 60px rgba(240, 147, 251, 0.3);
}
}

.glow-effect {
animation: glow 3s ease-in-out infinite;
}

/* Floating Orbs */
@keyframes floatOrb {
0%, 100% {
transform: translate(0, 0) scale(1);
opacity: 0.6;
}
33% {
transform: translate(30px, -30px) scale(1.1);
opacity: 0.8;
}
66% {
transform: translate(-20px, 20px) scale(0.9);
opacity: 0.7;
}
}

.floating-orb {
position: absolute;
border-radius: 50%;
filter: blur(40px);
animation: floatOrb 8s ease-in-out infinite;
pointer-events: none;
}

/* Cursor Trail */
.cursor-trail {
position: fixed;
width: 20px;
height: 20px;
border-radius: 50%;
background: radial-gradient(circle, rgba(102, 126, 234, 0.6), transparent);
pointer-events: none;
z-index: 9999;
animation: fadeOut 0.8s ease-out forwards;
}

@keyframes fadeOut {
to {
opacity: 0;
transform: scale(2);
}
}

/* Tilt Effect */
.tilt-effect {
transform-style: preserve-3d;
transition: transform 0.3s ease;
}

.tilt-effect:hover {
transform: perspective(1000px) rotateX(5deg) rotateY(-5deg) scale(1.02);
}

/* Magnetic Effect */
@keyframes magneticPulse {
0%, 100% {
transform: scale(1);
}
50% {
transform: scale(1.05);
}
}

/* Scroll Reveal */
.scroll-reveal {
opacity: 0;
transform: translateY(50px);
transition: opacity 0.8s ease, transform 0.8s ease;
}

.scroll-reveal.revealed {
opacity: 1;
transform: translateY(0);
}