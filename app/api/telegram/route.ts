import { z } from "zod";

export const runtime = "edge"; // –±—ã—Å—Ç—Ä–æ –∏ –ø—Ä–æ—Å—Ç–æ –¥–µ–ø–ª–æ–∏—Ç—Å—è –Ω–∞ Vercel

const payloadSchema = z.object({
  name: z.string().min(2).max(120),
  contact: z.string().min(3).max(320),
  message: z.string().max(2000).optional(),
});

function getBaseUrl() {
  return process.env.NEXT_PUBLIC_SITE_URL ?? "https://lidflow.vercel.app";
}

export async function POST(req: Request) {
  try {
    const json = await req.json().catch(() => {
      throw new z.ZodError([
        {
          code: "invalid_type",
          expected: "object",
          received: "undefined",
          path: [],
          message: "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö",
        },
      ]);
    });

    const parsed = payloadSchema.parse(json);

    const token = process.env.TG_BOT_TOKEN;
    const chatId = process.env.TG_CHAT_ID;

    if (!token || !chatId) {
      console.error("Telegram environment variables are missing");
      return Response.json(
        { error: "–°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" },
        { status: 500 },
      );
    }

    const text = `üÜï –ó–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ ${getBaseUrl()}\n\n–ò–º—è: ${parsed.name}\n–ö–æ–Ω—Ç–∞–∫—Ç: ${parsed.contact}\n–°–æ–æ–±—â–µ–Ω–∏–µ: ${parsed.message?.trim() || "-"}`;

    const response = await fetch(`https://api.telegram.org/bot${token}/sendMessage`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ chat_id: chatId, text }),
    });

    if (!response.ok) {
      const errorText = await response.text();
      console.error("Telegram API error", response.status, errorText);
      return Response.json(
        { error: "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ" },
        { status: 502 },
      );
    }

    return Response.json({ ok: true }, { status: 200 });
  } catch (error) {
    if (error instanceof z.ZodError) {
      return Response.json(
        { error: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö" },
        { status: 422 },
      );
    }

    console.error("Unexpected Telegram handler error", error);
    return Response.json(
      { error: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" },
      { status: 500 },
    );
  }
}